{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyup","listener","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,MAAO,2BAFX,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,MAAM,4BAAD,OAA8BE,EAAME,IAApC,QAdzB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,YAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,YAV/C,oBAiBE,WACE,IAAQD,EAAUO,KAAKR,MAAfC,MAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BT,UAtBrC,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.d3529efb.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyup: string,\n};\n\nexport class App extends React.Component {\n  state: State = {\n    keyup: 'Nothing was pressed yet',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.listener);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.listener);\n  }\n\n  listener = (event: KeyboardEvent) => {\n    this.setState({ keyup: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    const { keyup } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{keyup}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}